# Development-optimized Dockerfile for Flutter
FROM ubuntu:22.04

# Avoid interactive prompts
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC

# Install base dependencies + development tools
RUN apt-get update && apt-get install -y \
    curl \
    git \
    wget \
    unzip \
    xz-utils \
    zip \
    libglu1-mesa \
    openjdk-17-jdk \
    clang \
    cmake \
    ninja-build \
    pkg-config \
    libgtk-3-dev \
    liblzma-dev \
    libstdc++-12-dev \
    vim \
    nano \
    htop \
    tree \
    procps \
    adb \
    && rm -rf /var/lib/apt/lists/*

# Set JAVA_HOME
ENV JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
ENV PATH=$JAVA_HOME/bin:$PATH

# Install Flutter SDK
ENV FLUTTER_HOME=/opt/flutter
ENV PATH=$FLUTTER_HOME/bin:$PATH
RUN git clone https://github.com/flutter/flutter.git -b stable $FLUTTER_HOME \
    && $FLUTTER_HOME/bin/flutter doctor

# Install Android SDK
ENV ANDROID_HOME=/opt/android-sdk
ENV PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH

RUN mkdir -p $ANDROID_HOME/cmdline-tools \
    && wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip \
    && unzip commandlinetools-linux-11076708_latest.zip -d $ANDROID_HOME/cmdline-tools \
    && mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest \
    && rm commandlinetools-linux-11076708_latest.zip

# Accept licenses and install Android SDK components
RUN yes | sdkmanager --licenses \
    && sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"

# Configure Flutter for development
RUN flutter config --no-enable-ios \
    && flutter config --enable-linux-desktop \
    && flutter config --enable-web \
    && flutter config --enable-android \
    && flutter doctor

# Set working directory
WORKDIR /app

# Create directory and set working directory
# Don't copy pubspec.yaml initially as project doesn't exist yet

# Expose ports for development
EXPOSE 3000 8080 9100

# Development command with hot reload
CMD ["bash", "-c", "if [ -f pubspec.yaml ]; then flutter pub get && flutter run -d web-server --web-hostname 0.0.0.0 --web-port 3000; else echo 'No Flutter project found. Create one first.'; bash; fi"]